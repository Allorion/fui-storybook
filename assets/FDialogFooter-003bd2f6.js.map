{"version":3,"file":"FDialogFooter-003bd2f6.js","sources":["../../../fui/src/material/Dialog/FDialog/FDialog.tsx","../../../fui/src/material/Dialog/FDialogHeader/FDialogHeader.tsx","../../../fui/src/material/Dialog/FDialogBody/FDialogBody.tsx","../../../fui/src/material/Dialog/FDialogFooter/FDialogFooter.tsx"],"sourcesContent":["// *********************************************************************************************************************\n// Родительский компонет диалогового окна\n// *********************************************************************************************************************\n\nimport React, {FC, useEffect} from \"react\";\nimport \"../style/style.css\"\n\nexport interface IFDialog {\n    openAndClose: boolean\n    id?: string,\n    className?: string\n    st?: React.CSSProperties,\n    children?: React.ReactChild | React.ReactNode,\n    hide?: boolean\n    closeButtonBackPage?: React.Dispatch<React.SetStateAction<boolean>>,\n    width?: 'xs' | 'md' | 'lg' | 'xxl' | 'adaptive'\n}\n\nconst FDialog: FC<IFDialog> = ({\n                                   openAndClose,\n                                   closeButtonBackPage,\n                                   hide,\n                                   children,\n                                   id,\n                                   className,\n                                   st,\n                                   width = 'lg'\n                               }) => {\n\n    useEffect(() => {\n        if (document.getElementsByClassName(\"active-dialog\").length > 0) {\n            document.body.classList.add('open-dialog')\n        } else {\n            document.body.classList.remove('open-dialog')\n        }\n    }, [openAndClose])\n\n    return (\n        <React.Fragment>\n            <div\n                className={`${openAndClose ? 'f-dialog active-dialog' : 'f-dialog'} ${className !== undefined ? className : ''}`}\n                onClick={() => closeButtonBackPage && closeButtonBackPage(false)}\n                id={id}\n                style={st}\n            >\n                <div\n                    className={`${openAndClose ? 'f-dialog-content active' : 'f-dialog-content'} ${hide ? 'hide' : ''}`}\n                    style={{\n                        width: width === 'xxl' ? '95vw' : width === 'lg' ? '80vw' : width === 'md' ? '65vw' : width === 'xs' ? '50vw' : 'fit-content'\n                    }}\n                    onClick={(e) => e.stopPropagation()}\n                >\n                    {children}\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default FDialog","// *********************************************************************************************************************\n// Головная часть компонента диалогового окна\n// *********************************************************************************************************************\n\nimport React, {FC} from \"react\";\nimport {FCloseIcon} from \"../../../icons\";\n\nexport interface IFDialogHeader {\n    title?: string\n    handleClose?: () => void\n}\n\nconst FDialogHeader: FC<IFDialogHeader> = ({\n                                               title,\n                                               handleClose,\n                                           }) => {\n\n    return (\n        <React.Fragment>\n            <div className=\"dialog-header\">\n                <div>\n                    <h3 className=\"dialog-title\" style={{margin: 0}}>\n                        {title === undefined ? '' : title}\n                    </h3>\n                </div>\n                {handleClose !== undefined &&\n                    <FCloseIcon st={{cursor: \"pointer\"}} handleClose={handleClose} color={'primary'} size={30}/>\n                }\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default FDialogHeader","// *********************************************************************************************************************\n// Основная часть компонента диалогового окна\n// *********************************************************************************************************************\n\n\nimport React, {FC} from \"react\";\n\nexport interface IFDialogBody {\n    st?: React.CSSProperties\n    children?: React.ReactChild | React.ReactNode\n    scroll?: boolean\n}\n\n\nconst FDialogBody: FC<IFDialogBody> = ({\n                                           st,\n                                           children,\n                                           scroll\n                                       }) => {\n\n    let style: React.CSSProperties = {\n\n    }\n\n    if (scroll) {\n        style['overflowY'] = 'auto'\n    }\n\n    if (st !== undefined) {\n        style = Object.assign(style, st)\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"dialog-body\" style={style}>\n                {children}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default FDialogBody","// *********************************************************************************************************************\n// Нижняя часть компонента диалогового окна\n// *********************************************************************************************************************\n\n\nimport React, {FC} from \"react\";\n\nexport interface IFDialogFooter {\n    children?: React.ReactChild | React.ReactNode\n}\n\n\nconst FDialogFooter: FC<IFDialogFooter> = ({\n                                       children\n                                   }) => {\n\n    return (\n        <React.Fragment>\n            <div className={'dialog-footer'}>\n                {children}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default FDialogFooter"],"names":["FDialog","openAndClose","closeButtonBackPage","hide","children","id","className","st","width","useEffect","jsx","React","e","FDialog$1","FDialogHeader","title","handleClose","jsxs","FCloseIcon","FDialogBody","scroll","style","FDialogFooter"],"mappings":"qfAkBA,MAAAA,EAAA,CAAA,CAA+B,aAAAC,EACI,oBAAAC,EACA,KAAAC,EACA,SAAAC,EACA,GAAAC,EACA,UAAAC,EACA,GAAAC,EACA,MAAAC,EAAA,IAEJ,KAE3BC,EAAAA,UAAA,IAAA,CACI,SAAA,uBAAA,eAAA,EAAA,OAAA,EACI,SAAA,KAAA,UAAA,IAAA,aAAA,EAEA,SAAA,KAAA,UAAA,OAAA,aAAA,CACJ,EAAA,CAAAR,CAAA,CAAA,EAGJS,EAAAC,EAAA,SAAA,CAAA,SAAAD,EAEQ,MAAC,CAAA,UAAA,GAAAT,EAAA,yBAAA,UAAA,IAAAK,IAAA,OAAAA,EAAA,EAAA,GACiH,QAAA,IAAAJ,GAAAA,EAAA,EAAA,EAC/C,GAAAG,EAC/D,MAAAE,EACO,SAAAG,EAEP,MAAC,CAAA,UAAA,GAAAT,EAAA,0BAAA,kBAAA,IAAAE,EAAA,OAAA,EAAA,GACoG,MAAA,CAC1F,MAAAK,IAAA,MAAA,OAAAA,IAAA,KAAA,OAAAA,IAAA,KAAA,OAAAA,IAAA,KAAA,OAAA,aAC6G,EACpH,QAAAI,GAAAA,EAAA,gBAAA,EACkC,SAAAR,CAEjC,CAAA,CACL,CAAA,CAAA,CAAA,GAMhBS,EAAAb,42BC/CA,MAAAc,EAAA,CAAA,CAA2C,MAAAC,EACI,YAAAC,CAEJ,IAEvCN,EAAAC,EAAA,SAAA,CAAA,SAAAM,EAAA,MAAA,CAAA,UAAA,gBAAA,SAAA,CAGYP,EAAA,MAAA,CAAA,SAAAA,EAAA,KAAA,CAAA,UAAA,eAAA,MAAA,CAAA,OAAA,CAAA,EAAA,SAAAK,IAAA,OAAA,GAAAA,CAAA,CAAA,EAAA,EAIAC,IAAA,QAAAN,EAAAQ,EAAA,CAAA,GAAA,CAAA,OAAA,SAAA,EAAA,YAAAF,EAAA,MAAA,UAAA,KAAA,EAAA,CAAA,CAE8F,CAAA,CAAA,CAAA,CAAA,+SCZ9G,MAAAG,EAAA,CAAA,CAAuC,GAAAZ,EACI,SAAAH,EACA,OAAAgB,CAEJ,IAAA,CAEnC,IAAAC,EAAA,CAAA,EAIA,OAAAD,IACIC,EAAA,UAAA,QAGJd,IAAA,SACIc,EAAA,OAAA,OAAAA,EAAAd,CAAA,GAGJG,EAAAC,EAAA,SAAA,CAAA,SAAAD,EAAA,MAAA,CAAA,UAAA,cAAA,MAAAW,EAAA,SAAAjB,CAAA,CAAA,CAAA,CAAA,CAOJ,6RC3BA,MAAAkB,EAAA,CAAA,CAA2C,SAAAlB,CAER,IAE/BM,EAAAC,EAAA,SAAA,CAAA,SAAAD,EAAA,MAAA,CAAA,UAAA,gBAAA,SAAAN,CAAA,CAAA,CAAA,CAAA"}