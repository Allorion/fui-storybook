import{j as r}from"./jsx-runtime-DEdD30eg.js";import"./FButton-BMyxDZM2.js";import"./FButtonFile-A8ZoCR_A.js";import"./FTextField-c_bEAKdc.js";import{F as f}from"./FStack-DUahO965.js";import"./FGrid-Cf0t3TO0.js";import"./FContainer-CXdPSwYt.js";import"./FPaper-iPHHMhvA.js";import"./FAlert-DS38ZrBT.js";import"./index-RYns6xqu.js";import"./index-DAfSkmQi.js";import"./FOpenImgFull-BkT-3Av1.js";import"./FProgress-D9nQnxt0.js";import"./FCheckbox-CxRlIa0S.js";import"./FRadioButton-DU8OSBsH.js";import"./FPagination-HBLTjFx2.js";import"./FTimelineCard-PPBHv0K9.js";import"./FInputFileForm-D_0H5T3f.js";import"./FFile-Bcn0aMAy.js";import"./FSelectItem-BZmd-Lca.js";import"./FFullDateField-CWzNzzif.js";import"./FSelectSearchDb-Clr1GNKo.js";import"./FTextArea-DW0uzDSc.js";import"./FNative-F3FG8R_5.js";import"./FTab-BIi-RzkL.js";import"./FDropdownItem-Cj8HQD5i.js";import"./FSearchBox--q_Kwtu0.js";import"./FCarouselItem-C39m6uj5.js";import"./FSkeleton-D8rY3jBa.js";/* empty css               *//* empty css                   */import"./FLoadIcon-DK9LdIdw.js";import"./FCloseIcon-Dh2aLPHG.js";import"./FArrowIcon-q9p_-0kR.js";const o=({color:i="dark",size:d=32,st:u,id:g,className:t,handleClick:h})=>r.jsxs("svg",{width:d,style:u,className:`bi bi-card-list ${i} ${t!==void 0?t:""}`,viewBox:"0 0 16 16",id:g,onClick:h,children:[r.jsx("path",{d:"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z"}),r.jsx("path",{d:"M5 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 5 8zm0-2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm0 5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-1-5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0zM4 8a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0zm0 2.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z"})]});o.__docgenInfo={description:"",methods:[],displayName:"FListIcon",props:{color:{required:!1,tsType:{name:"union",raw:"'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'link'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'success'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'info'"},{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"},{name:"literal",value:"'link'"}]},description:"",defaultValue:{value:"'dark'",computed:!1}},size:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"32",computed:!1}},st:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:""},id:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""},handleClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const Y={title:"Icons/FListIcon",tags:["autodocs"],component:o},v=i=>r.jsx(o,{...i}),e=v.bind({});e.args={id:"list-icon-id",className:"list-icon-className",st:{padding:"20px"},size:64,handleClick:()=>{alert("Клик")}};const a=()=>r.jsxs(f,{spacing:2,direction:"row",children:[r.jsx(o,{color:"primary"}),r.jsx(o,{color:"secondary"}),r.jsx(o,{color:"success"}),r.jsx(o,{color:"danger"}),r.jsx(o,{color:"warning"}),r.jsx(o,{color:"info"}),r.jsx(o,{color:"light"}),r.jsx(o,{color:"dark"}),r.jsx(o,{color:"link"})]});a.__docgenInfo={description:"",methods:[],displayName:"ColorContained"};var s,n,c;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  return <FListIcon {...args} />;
}`,...(c=(n=e.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};var l,m,p;a.parameters={...a.parameters,docs:{...(l=a.parameters)==null?void 0:l.docs,source:{originalSource:`() => <FStack spacing={2} direction={'row'}>
    <FListIcon color={'primary'} />
    <FListIcon color={'secondary'} />
    <FListIcon color={'success'} />
    <FListIcon color={'danger'} />
    <FListIcon color={'warning'} />
    <FListIcon color={'info'} />
    <FListIcon color={'light'} />
    <FListIcon color={'dark'} />
    <FListIcon color={'link'} />
  </FStack>`,...(p=(m=a.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};const Z=["Default","ColorContained"];export{a as ColorContained,e as Default,Z as __namedExportsOrder,Y as default};
