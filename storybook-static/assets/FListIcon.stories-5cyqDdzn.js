import{j as r}from"./jsx-runtime-CkxqCPlQ.js";/* empty css                  */import"./FButton-CFnu8VPD.js";import"./FButtonFile-CHKnFrKb.js";import"./FTextField-DWvp23El.js";import{F as v}from"./FStack-DvJS5si1.js";import"./FGrid-CY0nb_Dr.js";import"./FContainer-Du0Di049.js";import"./FPaper-D6Oo0WgV.js";import"./FAlert-CefPhZQR.js";import"./FOpenImgFull-BCfLM3yy.js";import"./FProgress-C0i2V36s.js";import"./FCheckbox-D5toGIZf.js";import"./FRadioButton-DGCmVmG5.js";import"./FPagination-DPUVS4zR.js";import"./FTimelineCard-iMEw_La2.js";import"./FInputFileForm-Dh3UBGxg.js";import"./FFile-Cct2s-rO.js";import"./FSelectItem-C7ZDPLu7.js";import"./FFullDateField-Cszra0xD.js";import"./FSelectSearchDb-rImFaTjC.js";import"./FTextArea-DNeFs9G0.js";import"./FNative-D_ve21w6.js";import"./FTab-DIAeKHIc.js";import"./FDropdownItem-BzWoduQa.js";import"./FSearchBox-r2FvCsLg.js";import"./FCarouselItem-Diq-YX18.js";import"./FSkeleton-DuR3f4nd.js";/* empty css               */import"./index-DJO9vBfz.js";/* empty css                   */import"./FLoadIcon-8HypuZKP.js";import"./FCloseIcon-DM6S50X-.js";import"./FArrowIcon-lNeI-if7.js";import"./index-DLC2J04D.js";const d=({color:a="dark",size:u=32,st:g,id:h,className:t,handleClick:f})=>r.jsxs("svg",{width:u,style:g,className:`bi bi-card-list ${a} ${t!==void 0?t:""}`,viewBox:"0 0 16 16",id:h,onClick:f,children:[r.jsx("path",{d:"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z"}),r.jsx("path",{d:"M5 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 5 8zm0-2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm0 5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-1-5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0zM4 8a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0zm0 2.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z"})]}),o=d;d.__docgenInfo={description:"",methods:[],displayName:"FListIcon",props:{color:{required:!1,tsType:{name:"union",raw:"'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'link'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'success'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'info'"},{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"},{name:"literal",value:"'link'"}]},description:"",defaultValue:{value:"'dark'",computed:!1}},size:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"32",computed:!1}},st:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:""},id:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""},handleClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const rr={title:"Icons/FListIcon",tags:["autodocs"],component:o},x=a=>r.jsx(o,{...a}),e=x.bind({});e.args={id:"list-icon-id",className:"list-icon-className",st:{padding:"20px"},size:64,handleClick:()=>{alert("Клик")}};const i=()=>r.jsxs(v,{spacing:2,direction:"row",children:[r.jsx(o,{color:"primary"}),r.jsx(o,{color:"secondary"}),r.jsx(o,{color:"success"}),r.jsx(o,{color:"danger"}),r.jsx(o,{color:"warning"}),r.jsx(o,{color:"info"}),r.jsx(o,{color:"light"}),r.jsx(o,{color:"dark"}),r.jsx(o,{color:"link"})]});i.__docgenInfo={description:"",methods:[],displayName:"ColorContained"};var s,n,c;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`args => {
  return <FListIcon {...args} />;
}`,...(c=(n=e.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};var l,m,p;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`() => <FStack spacing={2} direction={'row'}>\r
    <FListIcon color={'primary'} />\r
    <FListIcon color={'secondary'} />\r
    <FListIcon color={'success'} />\r
    <FListIcon color={'danger'} />\r
    <FListIcon color={'warning'} />\r
    <FListIcon color={'info'} />\r
    <FListIcon color={'light'} />\r
    <FListIcon color={'dark'} />\r
    <FListIcon color={'link'} />\r
  </FStack>`,...(p=(m=i.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};const or=["Default","ColorContained"];export{i as ColorContained,e as Default,or as __namedExportsOrder,rr as default};
